/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package mib.p;


import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.HashMap;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carlo
 */
public class RegistreradeAliensForm extends javax.swing.JPanel {
     String epost;
    String isAdmin;
    private static InfDB idb;

    /**
     * Creates new form RegistreradeAliensForm
     */
    public RegistreradeAliensForm(String epost, String isAdmin) {
        
        this.epost= epost;
        this.isAdmin = isAdmin;
        
        initComponents();
        try {
            idb = new InfDB("mibdb", "3306", "mibdba", "mibkey");
        } catch (InfException ex) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + ex.getMessage());
        }
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSokDatum = new javax.swing.JLabel();
        btnSok = new javax.swing.JButton();
        lblFran = new javax.swing.JLabel();
        lblTill = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtDatum1 = new javax.swing.JTextField();
        txtDatum2 = new javax.swing.JTextField();
        btnMinSida = new javax.swing.JButton();
        lblbFormat = new javax.swing.JLabel();

        lblSokDatum.setFont(new java.awt.Font("MS Gothic", 1, 14)); // NOI18N
        lblSokDatum.setText("Sök Datum:");

        btnSok.setFont(new java.awt.Font("MS Gothic", 1, 12)); // NOI18N
        btnSok.setText("Sök");
        btnSok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSokActionPerformed(evt);
            }
        });

        lblFran.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblFran.setText("Från:");

        lblTill.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTill.setText("Till:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Alien ID", "Namn", "Registreringsdatum"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        btnMinSida.setFont(new java.awt.Font("MS Gothic", 1, 14)); // NOI18N
        btnMinSida.setText("Min Sida");
        btnMinSida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinSidaActionPerformed(evt);
            }
        });

        lblbFormat.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblbFormat.setText("YYYY-MM-DD");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(388, Short.MAX_VALUE)
                        .addComponent(btnMinSida))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(lblSokDatum)
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFran, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTill))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblbFormat, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                            .addComponent(txtDatum2, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                            .addComponent(txtDatum1))
                        .addGap(18, 18, 18)
                        .addComponent(btnSok)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSokDatum)
                            .addComponent(btnSok)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(lblbFormat)
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFran)
                            .addComponent(txtDatum1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTill)
                            .addComponent(txtDatum2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(btnMinSida)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSokActionPerformed

        try {

            // Datum 1 och 2 från txtfälten.
            String Datum1 = txtDatum1.getText();
            String Datum2 = txtDatum2.getText();

            if (Datum1.contains("-") && Datum2.contains("-")) {

                DefaultTableModel model = new DefaultTableModel();
                model.setColumnIdentifiers(new Object[]{"Alien ID", "Namn", "Registreringsdatum"});
                jTable1.setModel(model);

                ArrayList<HashMap<String, String>> rows;
                String query;

                query = ("SELECT mibdb.alien.Alien_ID, mibdb.alien.Namn, mibdb.alien.Registreringsdatum FROM mibdb.alien WHERE "
                        + "Registreringsdatum BETWEEN '" + Datum1 + "' AND '" + Datum2 + "' ORDER BY Registreringsdatum ");

                rows = idb.fetchRows(query);

                for (HashMap<String, String> item : rows) {
                    String alienId = item.get("Alien_ID");
                    String namn = item.get("Namn");
                    String registreringsdatum = item.get("Registreringsdatum");
                    model.addRow(new Object[]{alienId, namn, registreringsdatum});
                }

            }
            else {
                JOptionPane.showMessageDialog(null, "Ett fel inträffade vid hämtning av data.");
            }

            jTable1.setVisible(true);
        } catch (InfException e) {
            JOptionPane.showMessageDialog(null, "Ett fel inträffade vid hämtning av data.");

        }


    }//GEN-LAST:event_btnSokActionPerformed

    private void btnMinSidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinSidaActionPerformed
         JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(RegistreradeAliensForm.this);
                frame.setContentPane(new MinSidaAgentForm(epost,isAdmin));
                frame.revalidate();
                frame.setTitle("Startsida: Agent");
                frame.repaint();
    }//GEN-LAST:event_btnMinSidaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMinSida;
    private javax.swing.JButton btnSok;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblFran;
    private javax.swing.JLabel lblSokDatum;
    private javax.swing.JLabel lblTill;
    private javax.swing.JLabel lblbFormat;
    private javax.swing.JTextField txtDatum1;
    private javax.swing.JTextField txtDatum2;
    // End of variables declaration//GEN-END:variables
}
