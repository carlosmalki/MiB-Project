/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package mib.p;

import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author samsung
 */
public class Top3 extends javax.swing.JPanel {
    
    private static InfDB idb;
    private String epost;
    private String isAdmin;

    /**
     * Creates new form Top3
     */
    public Top3() {
        initComponents();
        this.epost = epost;
        this.isAdmin = isAdmin;
        
        try {
            idb = new InfDB("mibdb", "3306", "mibdba", "mibkey");
        } catch (InfException ex) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + ex.getMessage());
        }
        fyllComboBox();
        fyllScrollPane();
    }
    
    private void fyllScrollPane() {
        txtaListadeAgenter.append("ID: \t");
        txtaListadeAgenter.append("NAMN: \n");
    }
    
    private void fyllComboBox() {
        ArrayList<String> omraden;
        try {
            omraden = idb.fetchColumn("select benamning from omrade");
            cbValjOmrade.removeAllItems();
            for (String ettOmrade : omraden) {
                cbValjOmrade.addItem(ettOmrade);
            }
        } catch (InfException ex) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
        }
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblRubrik = new javax.swing.JLabel();
        cbValjOmrade = new javax.swing.JComboBox<>();
        btnVisaTopp3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaListadeAgenter = new javax.swing.JTextArea();
        btnTillbaka = new javax.swing.JButton();

        lblRubrik.setText("Välj område:");

        btnVisaTopp3.setText("Visa topp 3");
        btnVisaTopp3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisaTopp3ActionPerformed(evt);
            }
        });

        txtaListadeAgenter.setColumns(20);
        txtaListadeAgenter.setRows(5);
        jScrollPane1.setViewportView(txtaListadeAgenter);

        btnTillbaka.setText("Tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTillbaka)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbValjOmrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(btnVisaTopp3))
                    .addComponent(lblRubrik))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblRubrik)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbValjOmrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVisaTopp3))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnTillbaka)
                .addContainerGap(23, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(Top3.this);
                frame.setContentPane(new MinSidaAgentForm(epost, isAdmin));
                frame.revalidate();
                frame.setTitle("Startsida: Agent");
                frame.repaint();
    }//GEN-LAST:event_btnTillbakaActionPerformed

    private void btnVisaTopp3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisaTopp3ActionPerformed
        String omrade = cbValjOmrade.getSelectedItem().toString();
        txtaListadeAgenter.setText("");
        txtaListadeAgenter.setEditable(false);
        fyllScrollPane();
        try {
            String fraga = "SELECT agent.agent_id, agent.agent_name, COUNT(alien.agent_id) AS assigned_aliens FROM agent JOIN alien ON agent.agent_id = alien.agent_id JOIN omrade ON agent.omrade_id = omrade.omrade_id WHERE omrade.omrade_name = 'Område' GROUP BY agent.agent_id, agent.agent_name ORDER BY assigned_aliens DESC LIMIT 3";
            ArrayList<HashMap<String,String>>  agentLista = idb.fetchRows(fraga);
            for (HashMap<String,String> enMap : agentLista){
            String id = enMap.get("AGENT_ID");
            String namn =enMap.get("NAMN");
            txtaListadeAgenter.append(id + "\t");
            txtaListadeAgenter.append(namn + "\n");
            
            }
        } catch (InfException ex) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
        } catch (NullPointerException npe) {
            txtaListadeAgenter.append("Det finns inga agenter på denna plats...");
        }
    }//GEN-LAST:event_btnVisaTopp3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTillbaka;
    private javax.swing.JButton btnVisaTopp3;
    private javax.swing.JComboBox<String> cbValjOmrade;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblRubrik;
    private javax.swing.JTextArea txtaListadeAgenter;
    // End of variables declaration//GEN-END:variables
}
