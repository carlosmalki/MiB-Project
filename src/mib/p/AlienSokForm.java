/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package mib.p;

import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.HashMap;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;

/**
 *
 * @author ASUS
 */
public class AlienSokForm extends javax.swing.JPanel {

    private static InfDB idb;
    private String epost;
    private String isAdmin;
    private ValideringsKlass validering;

    /**
     * Creates new form AlienSokForm
     */
    public AlienSokForm(String epost, String isAdmin) {

        this.isAdmin = isAdmin;
        initComponents();
        try {
            idb = new InfDB("mibdb", "3306", "mibdba", "mibkey");
        } catch (InfException ex) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + ex.getMessage());
        }
        this.epost = epost;
        validering = new ValideringsKlass();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtAlienIdSok = new javax.swing.JTextField();
        btnAlienSok = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        labRas = new javax.swing.JLabel();
        labEpost = new javax.swing.JLabel();
        txtNamn = new javax.swing.JTextField();
        labTelefon = new javax.swing.JLabel();
        txtRas = new javax.swing.JTextField();
        labRegDatum = new javax.swing.JLabel();
        txtEpost = new javax.swing.JTextField();
        labAnsvAgent = new javax.swing.JLabel();
        txtTelefon = new javax.swing.JTextField();
        txtRegDatum = new javax.swing.JTextField();
        txtAnsvAgent = new javax.swing.JTextField();
        labNamn = new javax.swing.JLabel();
        lblAlienInfo = new javax.swing.JLabel();
        txtPlats = new javax.swing.JTextField();
        txtLosenOrd = new javax.swing.JTextField();
        labLosenOrd = new javax.swing.JLabel();
        lblPlats = new javax.swing.JLabel();
        btnMinSida = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(550, 343));
        setMinimumSize(new java.awt.Dimension(550, 343));
        setName(""); // NOI18N

        jLabel2.setFont(new java.awt.Font("MS Gothic", 1, 14)); // NOI18N
        jLabel2.setText("Ange Alien ID:");

        btnAlienSok.setFont(new java.awt.Font("MS Gothic", 1, 14)); // NOI18N
        btnAlienSok.setText("Sök");
        btnAlienSok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlienSokActionPerformed(evt);
            }
        });

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 153), new java.awt.Color(204, 204, 204), null, null));

        labRas.setFont(new java.awt.Font("MS Gothic", 1, 12)); // NOI18N
        labRas.setText("Ras:");

        labEpost.setFont(new java.awt.Font("MS Gothic", 1, 12)); // NOI18N
        labEpost.setText("Epost:");

        labTelefon.setFont(new java.awt.Font("MS Gothic", 1, 12)); // NOI18N
        labTelefon.setText("Telefon:");

        labRegDatum.setFont(new java.awt.Font("MS Gothic", 1, 12)); // NOI18N
        labRegDatum.setText("Reg-datum:");

        labAnsvAgent.setFont(new java.awt.Font("MS Gothic", 1, 12)); // NOI18N
        labAnsvAgent.setText("Ansvarig agent:");

        labNamn.setFont(new java.awt.Font("MS Gothic", 1, 12)); // NOI18N
        labNamn.setText("Namn:");

        lblAlienInfo.setFont(new java.awt.Font("MS Gothic", 1, 14)); // NOI18N
        lblAlienInfo.setText("Alien-information:");

        labLosenOrd.setFont(new java.awt.Font("MS Gothic", 1, 12)); // NOI18N
        labLosenOrd.setText("Lösenord:");

        lblPlats.setFont(new java.awt.Font("MS Gothic", 1, 12)); // NOI18N
        lblPlats.setText("Plats:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblAlienInfo)
                        .addGap(92, 92, 92))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labLosenOrd)
                                .addGap(18, 18, 18)
                                .addComponent(txtLosenOrd, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labTelefon, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labRegDatum, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labAnsvAgent, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labEpost, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labRas, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labNamn, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblPlats, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNamn)
                                    .addComponent(txtRas)
                                    .addComponent(txtEpost)
                                    .addComponent(txtTelefon)
                                    .addComponent(txtRegDatum)
                                    .addComponent(txtAnsvAgent)
                                    .addComponent(txtPlats, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))))
                        .addGap(28, 28, 28))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAlienInfo)
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labNamn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labRas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEpost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labEpost))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labTelefon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRegDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labRegDatum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAnsvAgent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labAnsvAgent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPlats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPlats))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLosenOrd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labLosenOrd))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        btnMinSida.setFont(new java.awt.Font("MS Gothic", 1, 14)); // NOI18N
        btnMinSida.setText("Min sida");
        btnMinSida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinSidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtAlienIdSok, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnMinSida)
                            .addComponent(btnAlienSok))))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtAlienIdSok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAlienSok)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMinSida)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
 /**
     * Metod kopplad till btnAlienSok som när den trycks kör metoden alienSok()
     * för att hämta hem uppgifter om vald alien, efter att först ha validerat
     * så användarinmatningen är giltig och existerar i databasen, detta genom
     * metoder från ValideringsKlass.
     *
     * @param evt
     */
    private void btnAlienSokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlienSokActionPerformed
        String alienIDString = txtAlienIdSok.getText();
        if (!ValideringsKlass.validateTextFieldNotEmpty(alienIDString)) {
            JOptionPane.showMessageDialog(null, "Du måste skriva in ett Alien ID för sökning.");
        } else if (!ValideringsKlass.existerarAlienID(alienIDString) && ValideringsKlass.valideraInt(alienIDString)) {
            JOptionPane.showMessageDialog(null, "Valt Alien-ID existerar inte i databasen. Försök igen.");

        } else if (!ValideringsKlass.valideraInt(alienIDString)) {
            JOptionPane.showMessageDialog(null, "Felaktig inmatning, ange heltalssiffra för sökning.");
        } else {
            alienSok();
        }

    }//GEN-LAST:event_btnAlienSokActionPerformed
    /**
     * Metod kopplad till btnMinSida som fyller upp JFrame med en ny instans av
     * MinSidaAgentForm för att användaren ska kunna ta sig tillbaka till sin
     * sida, epost och isAdmin skickas med som parametrar för att initialiera en
     * ny "Min Sida", fönster-titeln sätts till "Startida: Agent" och fönstret
     * "målas om" för att visa "Min Sida"-panelen.
     *
     * @param evt
     */
    private void btnMinSidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinSidaActionPerformed
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(AlienSokForm.this);
        frame.setContentPane(new MinSidaAgentForm(epost, isAdmin));
        frame.revalidate();
        frame.setTitle("Startsida: Agent");
        frame.repaint();
    }//GEN-LAST:event_btnMinSidaActionPerformed
    /**
     * Metod som hämtar ut värdena för de valda nycklarna i alienInfo HashMapen,
     * och sedan sätter respektive textfält med rätt värde.
     *
     * @param alienInfo
     */
    private void setTextFalt(HashMap<String, String> alienInfo) {
        txtNamn.setText(alienInfo.get("Namn"));
        txtRegDatum.setText(alienInfo.get("Registreringsdatum"));
        txtLosenOrd.setText(alienInfo.get("Losenord"));
        txtEpost.setText(alienInfo.get("Epost"));
        txtTelefon.setText(alienInfo.get("Telefon"));

    }

    /**
     * Metod som genom InfDB-metoden fetchSingle() hämtar namnet på den agent
     * som vald alien har som ansvarig agent, utifrån dennes Alien_ID, och
     * txtAnsvAgent sätts sedan med aktuell Agent..
     *
     * @param alienID
     */
    private void setAgent(int alienID) {
        try {
            String agentNamn = idb.fetchSingle("SELECT namn FROM mibdb.agent WHERE Agent_ID IN (SELECT Ansvarig_Agent FROM mibdb.alien WHERE Alien_ID = " + alienID + ")");
            txtAnsvAgent.setText(agentNamn);
        } catch (InfException e) {

        }
    }

    /**
     * Metod som genom InfDB-metoden fetchSingle() hämtar benämningen på den
     * plats där vald alien är registrerad, utifrån dennes Alien_ID, och
     * txtPlats sätts sedan med aktuell plats.
     *
     * @param alienID
     */
    private void setPlats(int alienID) {
        try {
            String platsNamn = idb.fetchSingle("SELECT Benamning FROM mibdb.plats WHERE Plats_ID IN (SELECT Plats FROM mibdb.alien WHERE Alien_ID = " + alienID + ")");
            txtPlats.setText(platsNamn);
        } catch (InfException e) {

        }

    }

    /**
     * Metod som genom InfDB-metoden fetchColumn skapar ArrayListor av Alien_ID
     * för de olika raserna, och sedan letas dessa listor igenom efter valt
     * Alien_ID och rasen sätts utifrån vilken lista det hittades i, och txtRas
     * sätts sedan med aktuell ras.
     *
     * @param alienID
     */
    private void setRas(int alienID) {

        String alienIdString = Integer.toString(alienID);

        try {
            ArrayList<String> worm = idb.fetchColumn("SELECT Alien_ID FROM mibdb.worm");
            if (worm.contains(alienIdString)) {
                txtRas.setText("Worm");
            }
        } catch (InfException e) {

        }
        try {
            ArrayList<String> squid = idb.fetchColumn("SELECT Alien_ID FROM mibdb.squid");
            if (squid.contains(alienIdString)) {
                txtRas.setText("Squid");
            }
        } catch (InfException e) {

        }
        try {
            ArrayList<String> boglodite = idb.fetchColumn("SELECT Alien_ID FROM mibdb.boglodite");
            if (boglodite.contains(alienIdString)) {
                txtRas.setText("Boglodite");
            }
        } catch (InfException e) {

        }

    }

    /**
     * Metod som genom InfDB-metoden fetchRow skapar en HashMap av raden för
     * valt Alien_ID i tabellen alien, sedan körs setTextFalt-metoden för att
     * skriva värdena från HashMapen på tilldelade textfält, och även
     * setAgent(), setRas() och SetPlats() för att skriva också dessa värden på
     * respektive textfält.
     */
    private void alienSok() {
        int alienID = Integer.parseInt(txtAlienIdSok.getText());
        

        try {
            HashMap<String, String> alienInfo = idb.fetchRow("SELECT * FROM mibdb.alien WHERE Alien_ID = " + alienID + ";");
            setTextFalt(alienInfo);
            setAgent(alienID);
            setPlats(alienID);
            setRas(alienID);

        } catch (InfException e) {
            JOptionPane.showMessageDialog(null, "Ett fel uppstod vid sökningen av alien.");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlienSok;
    private javax.swing.JButton btnMinSida;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labAnsvAgent;
    private javax.swing.JLabel labEpost;
    private javax.swing.JLabel labLosenOrd;
    private javax.swing.JLabel labNamn;
    private javax.swing.JLabel labRas;
    private javax.swing.JLabel labRegDatum;
    private javax.swing.JLabel labTelefon;
    private javax.swing.JLabel lblAlienInfo;
    private javax.swing.JLabel lblPlats;
    private javax.swing.JTextField txtAlienIdSok;
    private javax.swing.JTextField txtAnsvAgent;
    private javax.swing.JTextField txtEpost;
    private javax.swing.JTextField txtLosenOrd;
    private javax.swing.JTextField txtNamn;
    private javax.swing.JTextField txtPlats;
    private javax.swing.JTextField txtRas;
    private javax.swing.JTextField txtRegDatum;
    private javax.swing.JTextField txtTelefon;
    // End of variables declaration//GEN-END:variables
}
