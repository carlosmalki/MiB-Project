/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package mib.p;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.ArrayList;

/**
 *
 * @author ASUS
 */
public class RegisteraAgentForm extends javax.swing.JPanel {

    private static InfDB idb;
    private int agentID;
    private String epost;
    String isAdmin;
    ValideringsKlass validering = new ValideringsKlass();

    /**
     * Creates new form RegisteraForm
     *
     * @param epost
     * @param isAdmin
     */
    public RegisteraAgentForm(String epost, String isAdmin) {
        initComponents();
        try {
            idb = new InfDB("mibdb", "3306", "mibdba", "mibkey");
        } catch (InfException ex) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + ex.getMessage());
        }
        setAgentID();
        fyllOmradesComboBox();
        txtNamnReg.requestFocus();
        this.epost = epost;
        this.isAdmin = isAdmin;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNamn = new javax.swing.JLabel();
        lblTelefon = new javax.swing.JLabel();
        lblRegDatum = new javax.swing.JLabel();
        lblPlats = new javax.swing.JLabel();
        txtEpost = new javax.swing.JTextField();
        txtDatumReg = new javax.swing.JTextField();
        btnRegistrera = new javax.swing.JButton();
        txtLosenOrdReg = new javax.swing.JTextField();
        lblLosenord = new javax.swing.JLabel();
        txtNamnReg = new javax.swing.JTextField();
        btnMinSida = new javax.swing.JButton();
        lblRas = new javax.swing.JLabel();
        cbOmrade = new javax.swing.JComboBox<>();
        txtTelefon = new javax.swing.JTextField();
        lblVarierande = new javax.swing.JLabel();
        lblRegistreraAlien = new javax.swing.JLabel();
        cbAdmin = new javax.swing.JComboBox<>();

        setMaximumSize(new java.awt.Dimension(550, 343));
        setMinimumSize(new java.awt.Dimension(550, 343));
        setPreferredSize(new java.awt.Dimension(550, 343));

        lblNamn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblNamn.setText("Namn:");

        lblTelefon.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTelefon.setText("Epost:");

        lblRegDatum.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblRegDatum.setText("Anst-datum(YYYY-MM-DD):");

        lblPlats.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPlats.setText("Administratör:");

        btnRegistrera.setFont(new java.awt.Font("MS Gothic", 1, 14)); // NOI18N
        btnRegistrera.setText("Registrera");
        btnRegistrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistreraActionPerformed(evt);
            }
        });

        lblLosenord.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLosenord.setText("Lösenord:");

        btnMinSida.setFont(new java.awt.Font("MS Gothic", 1, 12)); // NOI18N
        btnMinSida.setText("Min sida");
        btnMinSida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinSidaActionPerformed(evt);
            }
        });

        lblRas.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblRas.setText("Område:");

        cbOmrade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Välj område", " " }));
        cbOmrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbOmradeActionPerformed(evt);
            }
        });

        lblVarierande.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblVarierande.setText("Telefon:");

        lblRegistreraAlien.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblRegistreraAlien.setText("Registrera Agent");

        cbAdmin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nej", "Ja" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblVarierande)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblRegDatum)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDatumReg, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblLosenord)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtLosenOrdReg, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblTelefon)
                                            .addComponent(lblPlats))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtEpost, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                                            .addComponent(cbAdmin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblNamn)
                                        .addComponent(lblRas))
                                    .addGap(116, 116, 116)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtNamnReg, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cbOmrade, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(lblRegistreraAlien)))
                .addContainerGap(98, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRegistrera)
                .addGap(107, 107, 107)
                .addComponent(btnMinSida)
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblRegistreraAlien)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRas)
                    .addComponent(cbOmrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNamnReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNamn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVarierande)
                    .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEpost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTelefon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPlats)
                    .addComponent(cbAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRegDatum)
                    .addComponent(txtDatumReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLosenOrdReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLosenord))
                .addGap(18, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMinSida)
                    .addComponent(btnRegistrera))
                .addGap(34, 34, 34))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistreraActionPerformed
        String namn = txtNamnReg.getText();
        String eposten = txtEpost.getText();
        String telnr = txtTelefon.getText();
        String datum = txtDatumReg.getText();
        String losenord = txtLosenOrdReg.getText();
        String admin;
        int omrade = getOmradesID();
        if(cbAdmin.getSelectedItem().toString().equals("Ja"))
        {
          admin = "J";
        }
        else
        {
        admin = "N";
        }
        
       

        if (!ValideringsKlass.validateTextFieldNotEmpty(namn)) {
            JOptionPane.showMessageDialog(null, "Namnetfältet får inte vara tomt.");
            return;
        }

        if (!ValideringsKlass.validateTextFieldNotEmpty(eposten)) {
            JOptionPane.showMessageDialog(null, "E-postfältet får inte vara tom.");
            return;
        }

        if (!ValideringsKlass.validateTextFieldNotEmpty(telnr)) {
            JOptionPane.showMessageDialog(null, "Telefonnummerfältet får inte vara tomt.");
            return;
        }

        if (!ValideringsKlass.validateTextFieldNotEmpty(datum)) {
            JOptionPane.showMessageDialog(null, "Datumefältet får inte vara tomt.");
            return;
        }

        if (!ValideringsKlass.validateTextFieldNotEmpty(losenord)) {
            JOptionPane.showMessageDialog(null, "Lösenordsfältet får inte vara tomt.");
            return;
        }

        if (!ValideringsKlass.valideraDatum(datum)) {
            JOptionPane.showMessageDialog(null, "Ange datum enligt format: YYYY-MM-DD.");
            return;
        }

        // Kontrollerar om e-postadressen redan finns registrerad, då E-post används för att unikt identifiera varje Alien.
        if (ValideringsKlass.checkEpost(eposten)) {
            JOptionPane.showMessageDialog(null, "E-postadressen finns redan i databasen.");
            return;
        }

        try {
            idb.insert("INSERT INTO mibdb.agent VALUES (" + agentID + ", '" + namn + "', '" + telnr + "', '" + datum + "', '" + admin + "', '" + eposten + "', '" + losenord + "', " + omrade + ")");
            JOptionPane.showMessageDialog(null, "Agent " + namn + " har registrerats i databasen.");
        } catch (InfException e) {
            JOptionPane.showMessageDialog(null, "Ett fel uppstod vid infogning av data.");
            return;
        }

        


        clearTextFalt();
        setAgentID();
    }//GEN-LAST:event_btnRegistreraActionPerformed

    private void btnMinSidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinSidaActionPerformed
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(RegisteraAgentForm.this);
        frame.setContentPane(new MinSidaAgentForm(epost, isAdmin));
        frame.revalidate();
        frame.setTitle("Startsida: Agent");
        frame.repaint();
    }//GEN-LAST:event_btnMinSidaActionPerformed

    /**
     * Återställer textfälten och comboBoxen.
     */
    private void clearTextFalt() {

        txtTelefon.setText("");
        txtNamnReg.setText("");

        txtEpost.setText("");
        txtLosenOrdReg.setText("");

        txtDatumReg.setText("");

        cbOmrade.setSelectedIndex(0);

    }

   private int getOmradesID() {
    String omrade = cbOmrade.getSelectedItem().toString();
    String query = "SELECT Omrades_ID FROM mibdb.omrade WHERE Benamning = '" + omrade + "';";
    int omradesID = 0;
    
    try {
        omradesID = Integer.parseInt(idb.fetchSingle(query));
    
    } catch (InfException e) {
        
        e.printStackTrace();
    }
    
    return omradesID;
}
    private void cbOmradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbOmradeActionPerformed

    }//GEN-LAST:event_cbOmradeActionPerformed
    private void setAgentID() {
        try {
            String agentIDStr = idb.getAutoIncrement("agent", "Agent_ID");
            agentID = Integer.parseInt(agentIDStr);

        } catch (InfException e) {
            // Hantera undantag vid frågefel
            JOptionPane.showMessageDialog(null, "Ett fel uppstod vid generering av Alien-ID. Vänligen försök igen.");
        }
    }
    
    private void fyllOmradesComboBox() {
    String query = "SELECT Benamning FROM mibdb.omrade;";
    ArrayList<String> omraden = new ArrayList<>();

    try {
        omraden = idb.fetchColumn(query);
        for(String omrade : omraden)
        {
        cbOmrade.addItem(omrade);
        
        }
    } catch (InfException e) {
        
        e.printStackTrace();
    }

    
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMinSida;
    private javax.swing.JButton btnRegistrera;
    private javax.swing.JComboBox<String> cbAdmin;
    private javax.swing.JComboBox<String> cbOmrade;
    private javax.swing.JLabel lblLosenord;
    private javax.swing.JLabel lblNamn;
    private javax.swing.JLabel lblPlats;
    private javax.swing.JLabel lblRas;
    private javax.swing.JLabel lblRegDatum;
    private javax.swing.JLabel lblRegistreraAlien;
    private javax.swing.JLabel lblTelefon;
    private javax.swing.JLabel lblVarierande;
    private javax.swing.JTextField txtDatumReg;
    private javax.swing.JTextField txtEpost;
    private javax.swing.JTextField txtLosenOrdReg;
    private javax.swing.JTextField txtNamnReg;
    private javax.swing.JTextField txtTelefon;
    // End of variables declaration//GEN-END:variables
}
